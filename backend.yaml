- name: configure backend server
  hosts: app
  become: yes
  tasks:
  - name: disable node js
    ansible.builtin.command: dnf module disable nodejs -y
  
  - name: enable node js 20
    ansible.builtin.command: dnf module enable nodejs:20 -y

  - name: install node js
    ansible.builtin.dnf:
      name: nodejs
      state: installed

  - name: add user
    ansible.builtin.user:
      name: expense
  
  - name: Create a directory if it does not exist
    ansible.builtin.file:
      path: /app
      state: directory

  - name: Download the application code to created app directory.
    ansible.builtin.get_url:
      url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
      dest: /tmp/backend.zip

  - name: unzip the content
    ansible.builtin.unarchive:
      src: /tmp/backend.zip
      dest: /app
      remote_src: yes
  
  - name: install dependencies.
    community.general.npm:
     path: /app
   
  - name: copy the config file
    ansible.builtin.copy:
      src: backend.service
      dest: /etc/systemd/system/backend.service
    
  - name: reload daemon service
    ansible.builtin.systemd_service:
      daemon_reload: true
      state: started
      name: backend
      enabled: true
  
  - name: install mysql
    ansible.builtin.pip:
      name: PyMySQL
      executable: pip3.9
  - name: load mysql schema 
    community.mysql.mysql_db:
      state: import
      target: /app/schema/backend.sql
      login_user : root
      login_password: ExpenseApp@1
      login_host: mysql.devdom.fun
  
  - name: restart service.
    ansible.builtin.service:
      name: backend
      state: restarted